<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ceying.chx.common.dao.SysMenuDao">
  <resultMap id="BaseResultMap" type="SysMenuDto">
    <id column="MENU_CODE" jdbcType="VARCHAR" property="menuCode" />
    <id column="KIND_CODE" jdbcType="VARCHAR" property="kindCode" />
    <result column="TRANS_CODE" jdbcType="VARCHAR" property="transCode" />
    <result column="SUB_TRANS_CODE" jdbcType="VARCHAR" property="subTransCode" />
    <result column="MENU_NAME" jdbcType="VARCHAR" property="menuName" />
    <result column="MENU_ARG" jdbcType="VARCHAR" property="menuArg" />
    <result column="MENU_ICON" jdbcType="VARCHAR" property="menuIcon" />
    <result column="MENU_URL" jdbcType="VARCHAR" property="menuUrl" />
    <result column="WINDOW_TYPE" jdbcType="VARCHAR" property="windowType" />
    <result column="WINDOW_MODEL" jdbcType="VARCHAR" property="windowModel" />
    <result column="TIP" jdbcType="VARCHAR" property="tip" />
    <result column="HOT_KEY" jdbcType="VARCHAR" property="hotKey" />
    <result column="PARENT_CODE" jdbcType="VARCHAR" property="parentCode" />
    <result column="ORDER_NO" jdbcType="DECIMAL" property="orderNo" />
    <result column="OPEN_FLAG" jdbcType="VARCHAR" property="openFlag" />
    <result column="TREE_IDX" jdbcType="VARCHAR" property="treeIdx" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
  </resultMap>
    <resultMap id="SubResultMap" type="SysMenuDto">
        <id column="MENU_CODE" jdbcType="VARCHAR" property="menuCode" />
        <id column="KIND_CODE" jdbcType="VARCHAR" property="kindCode" />
        <result column="TRANS_CODE" jdbcType="VARCHAR" property="transCode" />
        <result column="SUB_TRANS_CODE" jdbcType="VARCHAR" property="subTransCode" />
        <result column="MENU_NAME" jdbcType="VARCHAR" property="menuName" />
        <result column="MENU_ARG" jdbcType="VARCHAR" property="menuArg" />
        <result column="MENU_ICON" jdbcType="VARCHAR" property="menuIcon" />
        <result column="MENU_URL" jdbcType="VARCHAR" property="menuUrl" />
        <result column="WINDOW_TYPE" jdbcType="VARCHAR" property="windowType" />
        <result column="WINDOW_MODEL" jdbcType="VARCHAR" property="windowModel" />
        <result column="TIP" jdbcType="VARCHAR" property="tip" />
        <result column="HOT_KEY" jdbcType="VARCHAR" property="hotKey" />
        <result column="PARENT_CODE" jdbcType="VARCHAR" property="parentCode" />
        <result column="ORDER_NO" jdbcType="DECIMAL" property="orderNo" />
        <result column="OPEN_FLAG" jdbcType="VARCHAR" property="openFlag" />
        <result column="TREE_IDX" jdbcType="VARCHAR" property="treeIdx" />
        <result column="REMARK" jdbcType="VARCHAR" property="remark" />
        <result column="SUBTRANSNAME" jdbcType="VARCHAR" property="subTransName" />
        <result column="RELSERV" jdbcType="VARCHAR" property="relServ" />
        <result column="PARENT_NAME" jdbcType="VARCHAR" property="parentName" />
        <result column="MENU_URL" jdbcType="VARCHAR" property="attribute1" />
        <result column="MENU_ICON" jdbcType="VARCHAR" property="attribute2" />
    </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    MENU_CODE, KIND_CODE, TRANS_CODE, SUB_TRANS_CODE, MENU_NAME, MENU_ARG, MENU_ICON,
    MENU_URL, WINDOW_TYPE, WINDOW_MODEL, TIP, HOT_KEY, PARENT_CODE, ORDER_NO, OPEN_FLAG,
    TREE_IDX, REMARK
  </sql>

  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from TSYS_MENU
    where MENU_CODE = #{menuCode,jdbcType=VARCHAR}
      and KIND_CODE = #{kindCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from TSYS_MENU
    where MENU_CODE = #{menuCode,jdbcType=VARCHAR}
      and KIND_CODE = #{kindCode,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="SysMenuDto">
    insert into TSYS_MENU (MENU_CODE, KIND_CODE, TRANS_CODE,
      SUB_TRANS_CODE, MENU_NAME, MENU_ARG,
      MENU_ICON, MENU_URL, WINDOW_TYPE,
      WINDOW_MODEL, TIP, HOT_KEY,
      PARENT_CODE, ORDER_NO, OPEN_FLAG,
      TREE_IDX, REMARK)
    values (#{menuCode,jdbcType=VARCHAR}, #{kindCode,jdbcType=VARCHAR}, #{transCode,jdbcType=VARCHAR},
      #{subTransCode,jdbcType=VARCHAR}, #{menuName,jdbcType=VARCHAR}, #{menuArg,jdbcType=VARCHAR},
      #{menuIcon,jdbcType=VARCHAR}, #{menuUrl,jdbcType=VARCHAR}, #{windowType,jdbcType=VARCHAR},
      #{windowModel,jdbcType=VARCHAR}, #{tip,jdbcType=VARCHAR}, #{hotKey,jdbcType=VARCHAR},
      #{parentCode,jdbcType=VARCHAR}, #{orderNo,jdbcType=DECIMAL}, #{openFlag,jdbcType=VARCHAR},
      #{treeIdx,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="SysMenuDto">
    insert into TSYS_MENU
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="menuCode != null">
        MENU_CODE,
      </if>
      <if test="kindCode != null">
        KIND_CODE,
      </if>
      <if test="transCode != null">
        TRANS_CODE,
      </if>
      <if test="subTransCode != null">
        SUB_TRANS_CODE,
      </if>
      <if test="menuName != null">
        MENU_NAME,
      </if>
      <if test="menuArg != null">
        MENU_ARG,
      </if>
      <if test="menuIcon != null">
        MENU_ICON,
      </if>
      <if test="menuUrl != null">
        MENU_URL,
      </if>
      <if test="windowType != null">
        WINDOW_TYPE,
      </if>
      <if test="windowModel != null">
        WINDOW_MODEL,
      </if>
      <if test="tip != null">
        TIP,
      </if>
      <if test="hotKey != null">
        HOT_KEY,
      </if>
      <if test="parentCode != null">
        PARENT_CODE,
      </if>
      <if test="orderNo != null">
        ORDER_NO,
      </if>
      <if test="openFlag != null">
        OPEN_FLAG,
      </if>
      <if test="treeIdx != null">
        TREE_IDX,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="menuCode != null">
        #{menuCode,jdbcType=VARCHAR},
      </if>
      <if test="kindCode != null">
        #{kindCode,jdbcType=VARCHAR},
      </if>
      <if test="transCode != null">
        #{transCode,jdbcType=VARCHAR},
      </if>
      <if test="subTransCode != null">
        #{subTransCode,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null">
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuArg != null">
        #{menuArg,jdbcType=VARCHAR},
      </if>
      <if test="menuIcon != null">
        #{menuIcon,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null">
        #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="windowType != null">
        #{windowType,jdbcType=VARCHAR},
      </if>
      <if test="windowModel != null">
        #{windowModel,jdbcType=VARCHAR},
      </if>
      <if test="tip != null">
        #{tip,jdbcType=VARCHAR},
      </if>
      <if test="hotKey != null">
        #{hotKey,jdbcType=VARCHAR},
      </if>
      <if test="parentCode != null">
        #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=DECIMAL},
      </if>
      <if test="openFlag != null">
        #{openFlag,jdbcType=VARCHAR},
      </if>
      <if test="treeIdx != null">
        #{treeIdx,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByExampleSelective" parameterType="map">
    update TSYS_MENU
    <set>
      <if test="record.menuCode != null">
        MENU_CODE = #{record.menuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.kindCode != null">
        KIND_CODE = #{record.kindCode,jdbcType=VARCHAR},
      </if>
      <if test="record.transCode != null">
        TRANS_CODE = #{record.transCode,jdbcType=VARCHAR},
      </if>
      <if test="record.subTransCode != null">
        SUB_TRANS_CODE = #{record.subTransCode,jdbcType=VARCHAR},
      </if>
      <if test="record.menuName != null">
        MENU_NAME = #{record.menuName,jdbcType=VARCHAR},
      </if>
      <if test="record.menuArg != null">
        MENU_ARG = #{record.menuArg,jdbcType=VARCHAR},
      </if>
      <if test="record.menuIcon != null">
        MENU_ICON = #{record.menuIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.menuUrl != null">
        MENU_URL = #{record.menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.windowType != null">
        WINDOW_TYPE = #{record.windowType,jdbcType=VARCHAR},
      </if>
      <if test="record.windowModel != null">
        WINDOW_MODEL = #{record.windowModel,jdbcType=VARCHAR},
      </if>
      <if test="record.tip != null">
        TIP = #{record.tip,jdbcType=VARCHAR},
      </if>
      <if test="record.hotKey != null">
        HOT_KEY = #{record.hotKey,jdbcType=VARCHAR},
      </if>
      <if test="record.parentCode != null">
        PARENT_CODE = #{record.parentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        ORDER_NO = #{record.orderNo,jdbcType=DECIMAL},
      </if>
      <if test="record.openFlag != null">
        OPEN_FLAG = #{record.openFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.treeIdx != null">
        TREE_IDX = #{record.treeIdx,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update TSYS_MENU
    set MENU_CODE = #{record.menuCode,jdbcType=VARCHAR},
      KIND_CODE = #{record.kindCode,jdbcType=VARCHAR},
      TRANS_CODE = #{record.transCode,jdbcType=VARCHAR},
      SUB_TRANS_CODE = #{record.subTransCode,jdbcType=VARCHAR},
      MENU_NAME = #{record.menuName,jdbcType=VARCHAR},
      MENU_ARG = #{record.menuArg,jdbcType=VARCHAR},
      MENU_ICON = #{record.menuIcon,jdbcType=VARCHAR},
      MENU_URL = #{record.menuUrl,jdbcType=VARCHAR},
      WINDOW_TYPE = #{record.windowType,jdbcType=VARCHAR},
      WINDOW_MODEL = #{record.windowModel,jdbcType=VARCHAR},
      TIP = #{record.tip,jdbcType=VARCHAR},
      HOT_KEY = #{record.hotKey,jdbcType=VARCHAR},
      PARENT_CODE = #{record.parentCode,jdbcType=VARCHAR},
      ORDER_NO = #{record.orderNo,jdbcType=DECIMAL},
      OPEN_FLAG = #{record.openFlag,jdbcType=VARCHAR},
      TREE_IDX = #{record.treeIdx,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="SysMenuDto">
    update TSYS_MENU
    <set>
      <if test="transCode != null">
        TRANS_CODE = #{transCode,jdbcType=VARCHAR},
      </if>
      <if test="subTransCode != null">
        SUB_TRANS_CODE = #{subTransCode,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null">
        MENU_NAME = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuArg != null">
        MENU_ARG = #{menuArg,jdbcType=VARCHAR},
      </if>
      <if test="menuIcon != null">
        MENU_ICON = #{menuIcon,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null">
        MENU_URL = #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="windowType != null">
        WINDOW_TYPE = #{windowType,jdbcType=VARCHAR},
      </if>
      <if test="windowModel != null">
        WINDOW_MODEL = #{windowModel,jdbcType=VARCHAR},
      </if>
      <if test="tip != null">
        TIP = #{tip,jdbcType=VARCHAR},
      </if>
      <if test="hotKey != null">
        HOT_KEY = #{hotKey,jdbcType=VARCHAR},
      </if>
      <if test="parentCode != null">
        PARENT_CODE = #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        ORDER_NO = #{orderNo,jdbcType=DECIMAL},
      </if>
      <if test="openFlag != null">
        OPEN_FLAG = #{openFlag,jdbcType=VARCHAR},
      </if>
      <if test="treeIdx != null">
        TREE_IDX = #{treeIdx,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where MENU_CODE = #{menuCode,jdbcType=VARCHAR}
      and KIND_CODE = #{kindCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="SysMenuDto">
    update TSYS_MENU
    set TRANS_CODE = #{transCode,jdbcType=VARCHAR},
      SUB_TRANS_CODE = #{subTransCode,jdbcType=VARCHAR},
      MENU_NAME = #{menuName,jdbcType=VARCHAR},
      MENU_ARG = #{menuArg,jdbcType=VARCHAR},
      MENU_ICON = #{menuIcon,jdbcType=VARCHAR},
      MENU_URL = #{menuUrl,jdbcType=VARCHAR},
      WINDOW_TYPE = #{windowType,jdbcType=VARCHAR},
      WINDOW_MODEL = #{windowModel,jdbcType=VARCHAR},
      TIP = #{tip,jdbcType=VARCHAR},
      HOT_KEY = #{hotKey,jdbcType=VARCHAR},
      PARENT_CODE = #{parentCode,jdbcType=VARCHAR},
      ORDER_NO = #{orderNo,jdbcType=DECIMAL},
      OPEN_FLAG = #{openFlag,jdbcType=VARCHAR},
      TREE_IDX = #{treeIdx,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR}
    where MENU_CODE = #{menuCode,jdbcType=VARCHAR}
      and KIND_CODE = #{kindCode,jdbcType=VARCHAR}
  </update>



    <!--自定义-->
    <!--查询子功能-->
    <select id="queryMovedMenu" resultMap="BaseResultMap"><!--菜单移动 -->
        select * from tsys_menu t
        where t.parent_code=#{parentCode,jdbcType=VARCHAR}
        and t.kind_code=#{kindCode,jdbcType=VARCHAR}
        and t.order_no=#{orderNo,jdbcType=VARCHAR}
    </select>
    <select id="querySingleMenu" resultMap="BaseResultMap">
        select t.*,t1.menu_name parentCodeName
        FROM tsys_menu t,tsys_menu t1
        WHERE t.parent_code=t1.menu_code
        and t.menu_code=#{menuCode,jdbcType=VARCHAR}
        ORDER BY t.ORDER_NO
    </select>

    <select id="queryAllByCode" resultMap="BaseResultMap">
        select t.*,t1.menu_name parentCodeName
        FROM tsys_menu t,tsys_menu t1
        where t.parent_code=t1.menu_code
        <if test="menuCode !=null and menuCode !=''">
            and t.parent_code=#{menuCode,jdbcType=VARCHAR}
        </if>
        <if test="menuName !=null and menuName !=''">
            and t.menu_name like concat(concat('%',#{menuName,jdbcType=VARCHAR}),'%')
        </if>
        <if test="kindCode !=null and kindCode !=''">
            and t.kind_code=#{kindCode,jdbcType=VARCHAR}
        </if>
        order by t.order_no
    </select>
    <select id="queryAllByCodeCount" resultType="java.lang.Integer">
        select count(*)
        FROM tsys_menu t,tsys_menu t1
        where t.parent_code=t1.menu_code
        <if test="menuCode !=null and menuCode !=''">
            and t.parent_code=#{menuCode,jdbcType=VARCHAR}
        </if>
        <if test="menuName !=null and menuName !=''">
            and t.menu_name like concat(concat('%',#{menuName,jdbcType=VARCHAR}),'%')
        </if>
        <if test="kindCode !=null and kindCode !=''">
            and t.kind_code=#{kindCode,jdbcType=VARCHAR}
        </if>
        order by t.order_no
    </select>
    <select id="queryOrderNoByParentCode" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*)
        from tsys_menu t
        where t.parent_code=#{id}
        order by t.order_no
    </select>
    <select id="queryByParentCode" resultMap="BaseResultMap">
     select * from TSYS_MENU
        where 1=1
        and MENU_CODE <![CDATA[<>]]> 'workBench'
        <if test="kindCode !=null and kindCode !=''">
            and KIND_CODE = #{kindCode,jdbcType=VARCHAR}
        </if>
        <if test="parentCode !=null and parentCode !=''">
            and PARENT_CODE = #{parentCode,jdbcType=VARCHAR}
        </if>
        <if test="menuCode !=null and menuCode !=''">
            and MENU_CODE = #{menuCode,jdbcType=VARCHAR}
        </if>
        ORDER BY ORDER_NO


    </select>
    <select id="querySubMenu" resultMap="SubResultMap">
        select t.*,t1.menu_name as parent_name,t.menu_url as attribute1,t.menu_icon as attribute2
        FROM tsys_menu t left join tsys_menu t1 on t.parent_code=t1.menu_code
        <if test="parentCode !=null and parentCode !=''">
            start with t.parent_code= #{parentCode,jdbcType=VARCHAR}
            connect by prior t.menu_code=t.parent_code
            order by t.tree_idx
        </if>


    </select>

    <select id="countTotalByParCode" resultType="java.lang.Integer">
        select count(*) from TSYS_MENU
        where 1=1
        <if test="menuCode !=null and menuCode !=''">
            and MENU_CODE = #{menuCode,jdbcType=VARCHAR}
        </if>
        <if test="kindCode !=null and kindCode !=''">
            and KIND_CODE = #{kindCode,jdbcType=VARCHAR}
        </if>
        <if test="parentCode !=null and parentCode !=''">
            and PARENT_CODE = #{parentCode,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="queryPower" resultMap="BaseResultMap">
        with TEMP_A as (
        select * from (
        select t.parent_code, t.menu_code, t.menu_name, t.tree_idx
                  from tsys_menu t,tsys_tenant_contract b,tsys_package_detail c
                  where b.package_id=c.package_id
                  and t.sub_trans_code = c.sub_trans_code
                  and b.tenant_id=#{tenant_id,jdbcType=VARCHAR}
        union all
        select t.trans_code as parent_code,t.sub_trans_code as menu_code,t.sub_trans_name as menu_name,tb.tree_idx
          from tsys_subtrans t,tsys_trans ts,tsys_menu tb,tsys_tenant_contract b,tsys_package_detail c
          where t.trans_code = ts.trans_code
          and ts.trans_code=tb.trans_code
          and b.package_id=c.package_id
          and t.sub_trans_code = c.sub_trans_code
          and b.tenant_id=#{tenant_id,jdbcType=VARCHAR}
         ) tm  where tm.parent_code!=tm.menu_code ),
          TEMP_B as (
           select a.sub_trans_code,'true' as checked from tsys_role_right a where a.role_code=#{rolecode,jdbcType=VARCHAR}
          )
         select distinct t.* from (
          select a.*,b.checked from TEMP_A a,TEMP_B b where a.menu_code=b.sub_trans_code(+)
          ) t order by t.parent_code asc
    </select>

    <select id="queryUserPower" resultMap="BaseResultMap">
        select distinct t.parent_code,t.menu_code,t.menu_name,t.checked,decode(t.attribute1,'','false',t.attribute1) as attribute1 from (
        select a.*, b.checked,b.attribute1 from (select * from (
        select t.parent_code, t.menu_code, t.menu_name
        from tsys_menu t,tsys_tenant_contract b,tsys_package_detail c
        where b.package_id=c.package_id
        and t.sub_trans_code = c.sub_trans_code
        and b.tenant_id=#{tenant_id,jdbcType=VARCHAR}
        union all
        select t.trans_code as parent_code,t.sub_trans_code as menu_code,t.sub_trans_name as menu_name
        from tsys_subtrans t,tsys_trans ts,tsys_menu tb,tsys_tenant_contract b,tsys_package_detail c
        where t.trans_code = ts.trans_code
        and ts.trans_code=tb.trans_code
        and b.package_id=c.package_id
        and t.sub_trans_code = c.sub_trans_code
        and b.tenant_id=#{tenant_id,jdbcType=VARCHAR}
        ) tm  where tm.parent_code!=tm.menu_code) a ,(select * from (select distinct ur.trans_code,
        ur.sub_trans_code,
        'true' as checked,
        'false' as attribute1
        from tsys_user_right ur
        where ur.user_id =#{userid,jdbcType=VARCHAR}
        and (ur.right_enable is null or ur.right_enable in (''))
        and ur.right_flag = 1
        union all
        select distinct rr.trans_code,
        rr.sub_trans_code,
        'true' as checked,
        'true' as attribute1
        from tsys_role_user ru, tsys_role_right rr
        where rr.role_code = ru.role_code
        and ru.user_code =#{userid,jdbcType=VARCHAR}
        and rr.sub_trans_code not in
        (select ur.sub_trans_code
        from tsys_user_right ur
        where ur.trans_code = rr.trans_code
        and ur.sub_trans_code = rr.sub_trans_code
        and ur.user_id =#{userid,jdbcType=VARCHAR}
        and (ur.right_enable is null or ur.right_enable in ('','0'))
        and ur.right_flag = 1)
        and ru.right_flag = 1
        and rr.right_flag = 1
        union all
        select distinct rr.trans_code,
        rr.sub_trans_code,
        '' as checked,
        'true' as attribute1
        from tsys_role_user ru, tsys_role_right rr
        where rr.role_code = ru.role_code
        and ru.user_code =#{userid,jdbcType=VARCHAR}
        and rr.sub_trans_code in
        (select ur.sub_trans_code
        from tsys_user_right ur
        where ur.trans_code = rr.trans_code
        and ur.sub_trans_code = rr.sub_trans_code
        and ur.user_id =#{userid,jdbcType=VARCHAR}
        and ur.right_enable='0'
        and ur.right_flag = 1)
        and ru.right_flag = 1
        and rr.right_flag = 1
        )
        ) b where a.menu_code=b.sub_trans_code(+)
        ) t  order by t.menu_code asc
    </select>


  <!--查询套餐功能列表-->
  <select id="packagePower"  resultMap="BaseResultMap" parameterType="String">
    select distinct t.* from (
    select a.*,b.checked from (select *  from (select t.parent_code,t.menu_code,t.menu_name
    from tsys_menu t
    union all
    select t.trans_code as parent_code,t.sub_trans_code as menu_code,t.sub_trans_name as menu_name
    from tsys_subtrans t,tsys_trans ts,tsys_menu tb where t.trans_code = ts.trans_code and ts.trans_code=tb.trans_code and exists (select tr.sub_trans_code
    from tsys_user_rights tr
    where tr.user_id = 'admin'
    and tr.right_flag = '2'
    and t.sub_trans_code = tr.sub_trans_code)
    ) tm  where tm.parent_code!=tm.menu_code) a,(select a.*,'true' as checked from tsys_package_detail a where a.package_id=#{packageId,jdbcType=VARCHAR}) b where a.menu_code=b.sub_trans_code(+)
    ) t where  1=1 order by t.menu_code asc
  </select>


  <!--查询已选择套餐功能列表-->
  <select id="packagePowerView"  resultMap="BaseResultMap" parameterType="String">
    select distinct t.*
  from (select a.*, b.checked
          from (select *
                  from (select t.parent_code, t.menu_code, t.menu_name
                          from tsys_menu t
                        union all
                        select t.trans_code     as parent_code,
                               t.sub_trans_code as menu_code,
                               t.sub_trans_name as menu_name
                          from tsys_subtrans       t,
                               tsys_trans          ts,
                               tsys_menu           tb,
                               tsys_package_detail tr
                         where t.trans_code = ts.trans_code
                           and ts.trans_code = tb.trans_code
                           and exists
                         (select tr.sub_trans_code
                                  from tsys_user_rights tr
                                 where tr.package_id =
                                       #{packageId,jdbcType=VARCHAR}
                                   and t.sub_trans_code = tr.sub_trans_code)
                           and tr.package_id =
                                #{packageId,jdbcType=VARCHAR}) tm
                 where tm.parent_code != tm.menu_code) a,
               (select a.*, 'true' as checked
                  from tsys_package_detail a
                 where a.package_id = #{packageId,jdbcType=VARCHAR}) b
         where a.menu_code = b.sub_trans_code) t
 where 1 = 1
 order by t.menu_code asc
  </select>

  <!--查询菜单与角色的关系-->
  <select id="queryAllWithRoleInfo" resultMap="SubResultMap">
    select distinct  m.*,r.ROLE_CODE as roleCode,m.menu_url as attribute1,m.menu_icon as attribute2 from TSYS_MENU m  LEFT JOIN TSYS_ROLE_RIGHT r on m.TRANS_CODE=r.TRANS_CODE where 1=1
    <if test="roleCode !=null and roleCode !=''">
      and r.ROLE_CODE = #{roleCode,jdbcType=VARCHAR}
    </if>
    <if test="parentCode !=null and parentCode !=''">
      and r.PARENT_CODE = #{parentCode,jdbcType=VARCHAR}
    </if>
    ORDER BY m.TRANS_CODE
  </select>

  <!--查询菜单与用户的关系-->
  <select id="queryUserTendMenu" resultMap="SubResultMap">
    select distinct  m.*,u.user_id as roleCode,m.menu_url as attribute1,m.menu_icon as attribute2 from TSYS_MENU m LEFT JOIN(
    select distinct  ur.trans_code, ur.sub_trans_code, ur.right_flag, ts.rel_serv,ur.user_id  from tsys_user_right ur, tsys_trans tr, tsys_subtrans ts
    where ur.trans_code=tr.trans_code and ur.sub_trans_code = ts.sub_trans_code and tr.model_code!='-1' and (ur.right_enable is null or right_enable in('','1') )) u on m.TRANS_CODE=u.TRANS_CODE where u.user_id!=null
    <if test="userId !=null and userId !=''">
      and u.user_id = #{userId,jdbcType=VARCHAR}
    </if>
  </select>
</mapper>